// микрофон

var inputField = document.getElementById("typeahead");
var hashTagsDataset = $(".tt-dataset-hashTags");
var ttMenu = $(".tt-menu");
var noResultsMessage = '<div class="search_nofing">Ничего не найдено</div>';

function startSpeechRecognition() {
    const microphoneIcon = document.getElementById('microphone-btn');

    // Загрузка звука активации микрофона
    const audio_start = new Audio('/media/start.mp3');
    const audio_stop = new Audio('/media/cancel.mp3');

    if (microphoneIcon.classList.contains('active_micro')) {

        // Микрофон уже активирован, поэтому нужно его выключить

        // Воспроизведение звука деактивации микрофона
        audio_stop.play();

        microphoneIcon.classList.remove('animate');
        microphoneIcon.classList.remove('active_micro');
        inputField.placeholder = 'Найти среди всех товаров ...';

    } else {
        // Микрофон еще не активирован, нужно его включить

        const recognition = new webkitSpeechRecognition() || new SpeechRecognition();

        microphoneIcon.disabled = true; // Отключение кнопки во время распознавания речи

        microphoneIcon.classList.add('animate');
        microphoneIcon.classList.add('active_micro'); // Добавление класса для изменения цвета иконки

        inputField.placeholder = 'Говорите...';

        // Воспроизведение звука активации микрофона
        audio_start.play();

        recognition.lang = 'ru-RU'; // Язык распознавания речи (русский)

        recognition.onresult = function (event) {
            const transcript = event.results[0][0].transcript;

            // Воспроизведение звука деактивации микрофона
            audio_stop.play();

            inputField.value = ""; // Очистить поле ввода

            // Ввод текста посимвольно
            for (let i = 0; i < transcript.length; i++) {
                setTimeout(function () {
                    inputField.value += transcript[i];
                }, i * 100); // Задержка между каждым символом - 100 миллисекунд
            }

            microphoneIcon.classList.remove('animate');
            microphoneIcon.classList.remove('active_micro');
            inputField.placeholder = 'Найти среди всех товаров ...';

            // Вызов функции для отправки запроса и обработки ответа
            //   console.log(transcript);
            processInput(transcript);

        }

        recognition.start();
    }
}


// var hasAddedTovars = true;

var aa = 1

function loadingsearch(results) {

    // console.log(aa)

    html = '';
    hasCategories = false;
    hasTags = false;
    hasTovars = false;
    
    rub1 = '<svg height="11" style="fill: #000;    margin-left: 3px;" version="1.1" viewBox="0 0 510.127 510.127" width="11" x="0px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px"><g><g><path d="M34.786,428.963h81.158v69.572c0,3.385,1.083,6.156,3.262,8.322c2.173,2.18,4.951,3.27,8.335,3.27h60.502c3.14,0,5.857-1.09,8.152-3.27c2.295-2.166,3.439-4.938,3.439-8.322v-69.572h182.964c3.377,0,6.156-1.076,8.334-3.256                            c2.18-2.178,3.262-4.951,3.262-8.336v-46.377c0-3.365-1.082-6.156-3.262-8.322c-2.172-2.18-4.957-3.27-8.334-3.27H199.628v-42.75                            h123.184c48.305,0,87.73-14.719,118.293-44.199c30.551-29.449,45.834-67.49,45.834-114.125c0-46.604-15.283-84.646-45.834-114.125                            C410.548,14.749,371.116,0,322.812,0H127.535c-3.385,0-6.157,1.089-8.335,3.256c-2.173,2.179-3.262,4.969-3.262,8.335v227.896                            H34.786c-3.384,0-6.157,1.145-8.335,3.439c-2.172,2.295-3.262,5.012-3.262,8.151v53.978c0,3.385,1.083,6.158,3.262,8.336                            c2.179,2.18,4.945,3.256,8.335,3.256h81.158v42.754H34.786c-3.384,0-6.157,1.09-8.335,3.27c-2.172,2.166-3.262,4.951-3.262,8.322                            v46.377c0,3.385,1.083,6.158,3.262,8.336C28.629,427.887,31.401,428.963,34.786,428.963z M199.628,77.179h115.938                            c25.6,0,46.248,7.485,61.953,22.46c15.697,14.976,23.549,34.547,23.549,58.691c0,24.156-7.852,43.733-23.549,58.691                            c-15.705,14.988-36.354,22.473-61.953,22.473H199.628V77.179z"></path></g></g></svg>'
    rub2 = '<svg height="9" style="fill: #101010;    margin-left: 3px;" version="1.1" viewBox="0 0 510.127 510.127" width="9" x="0px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px"><g><g><path d="M34.786,428.963h81.158v69.572c0,3.385,1.083,6.156,3.262,8.322c2.173,2.18,4.951,3.27,8.335,3.27h60.502c3.14,0,5.857-1.09,8.152-3.27c2.295-2.166,3.439-4.938,3.439-8.322v-69.572h182.964c3.377,0,6.156-1.076,8.334-3.256                            c2.18-2.178,3.262-4.951,3.262-8.336v-46.377c0-3.365-1.082-6.156-3.262-8.322c-2.172-2.18-4.957-3.27-8.334-3.27H199.628v-42.75                            h123.184c48.305,0,87.73-14.719,118.293-44.199c30.551-29.449,45.834-67.49,45.834-114.125c0-46.604-15.283-84.646-45.834-114.125                            C410.548,14.749,371.116,0,322.812,0H127.535c-3.385,0-6.157,1.089-8.335,3.256c-2.173,2.179-3.262,4.969-3.262,8.335v227.896                            H34.786c-3.384,0-6.157,1.145-8.335,3.439c-2.172,2.295-3.262,5.012-3.262,8.151v53.978c0,3.385,1.083,6.158,3.262,8.336                            c2.179,2.18,4.945,3.256,8.335,3.256h81.158v42.754H34.786c-3.384,0-6.157,1.09-8.335,3.27c-2.172,2.166-3.262,4.951-3.262,8.322                            v46.377c0,3.385,1.083,6.158,3.262,8.336C28.629,427.887,31.401,428.963,34.786,428.963z M199.628,77.179h115.938                            c25.6,0,46.248,7.485,61.953,22.46c15.697,14.976,23.549,34.547,23.549,58.691c0,24.156-7.852,43.733-23.549,58.691                            c-15.705,14.988-36.354,22.473-61.953,22.473H199.628V77.179z"></path></g></g></svg>'

    

    results.forEach(result => {

        if (result.type === 'tovar') {
            hasTovars = true;
            // console.log('tovar');
        }

        });

       


        

        if (hasTovars) {
            
            html += '<div class="tovar-wrapper-search">';
            results.forEach(result => {
                if (result.type === 'tovar') {

                  
                    html += '<div class="tt-suggestion tt-selectable"><a href="/wiki/' + result.url + '/">\
                    <div class="autocomplete-suggestion " data-index="0">\
                    <div class="search-name">' + result.q + '</div>\
                    </div></a></div>';
                }
            });
            html += '</div>';
            
        } 

   

    
    return html
    
}




// Функция для отправки запроса и обработки ответа
function processInput(zapros) {
    // console.log(zapros);

    $(".tt-menu").addClass("tt-open");
    $(".tt-menu").css("display", "block");

    // hasAddedTovars = true;

    const url = '/hashtag.json?q=' + encodeURIComponent(zapros);
    fetch(url).then(response => response.json()).then(data => {

            
            allResults = [];
            allResults = data;

            // const results = data.slice(0, 30); // Ограничьте результаты до 30 элементов
            // console.log(results)
            var tovarItems = data.filter(item => item.type === 'tovar').slice(0, 30);
            var categoryItems = data.filter(item => item.type === 'category').slice(0, 30);
            var tagsItems = data.filter(item => item.type === 'tag').slice(0, 30);

            const results = tovarItems.concat(categoryItems, tagsItems);

            if (results.length === 0) {
                hashTagsDataset.empty();
                hashTagsDataset.html(noResultsMessage);
            } else {


                html = loadingsearch(results);

                $(".tt-dataset-hashTags").empty();
                $(".tt-dataset-hashTags").html("<div class='visible_cont'>" + html + "</div>");


                // console.log(tagsItems);
                
                // удаляем заголовок товары если нет
                if (tovarItems.length === 0) {
                    $("body").find(".seach_tovar_zg").remove()
                }

                // проверяем ширину скрола у поиска чтобы дать отступ прокрутке

                var categoryWrappersearch = document.querySelector('.category-wrapper-search');
                var tagWrappersearch = document.querySelector('.tag-wrapper-search');

                // console.log(categoryWrappersearch);
                // console.log(tagWrappersearch);
                

                function checkScrollbar(element) {
                    if (element.scrollWidth > element.clientWidth) {
                        element.classList.add('has-scrollbar');
                    } else {
                        element.classList.remove('has-scrollbar');
                    }
                }
                checkScrollbar(categoryWrappersearch);
                checkScrollbar(tagWrappersearch);

            }
            // Обработка полученных данных
            // console.log(data);
        })
        .catch(error => {
            // Обработка ошибок
            // console.error(error);
        });
}


var currentPage = 1;
var pageSize = 30;


function loadMoreResults() {

    const start = currentPage * pageSize;
    const end = start + pageSize;
    const results = allResults.slice(start, end);

    html = loadingsearch(results);
    $(".tt-dataset-hashTags .visible_cont").append(html);

    currentPage++; // Увеличить текущую страницу
    // hasAddedTovars = false;
}

$(document).ready(function() {
    // прокрутка результатов
    let scrollsearch;

    if (document.body.clientWidth <= 800) {
        scrollsearch = document.querySelector('.mobile_search_menu');
    }else{
        scrollsearch = document.querySelector('.tt-dataset-hashTags');
    }

    
    scrollsearch.addEventListener('scroll', function () {
        aa = 0
        // console.log(aa+":bb")
        if (typeof allResults !== 'undefined' && Array.isArray(allResults) && allResults.length > 0) {
            // console.log("скролю")
            if ((scrollsearch.offsetHeight + scrollsearch.scrollTop) >= scrollsearch.scrollHeight) {
                // console.log("грузим еще")
                loadMoreResults();
            }
        }
    })

    // обычный текстовый набор
    inputField.addEventListener("input", function() {
      var inputText = inputField.value;
    //   $(".tt-dataset-hashTags").empty();
      aa = 1
    //   console.log(aa+":aa")
      hasAddedCategory = true;
      
      if (inputText.length > 1) {
        processInput(inputText);
        
        } else {
        hashTagsDataset.empty();
       
      }
    });
    
}); 

// Обработчик события клика на inputField
$(document).on("click", "#typeahead", function(event) {
if (!ttMenu.hasClass("tt-open")) {
ttMenu.addClass("tt-open");
ttMenu.css("display", "block");
}
});

// Обработчик события клика вне блока tt-menu
$(document).on("click", function(event) {
  if (!$(event.target).closest(ttMenu).length && !$(event.target).is("#typeahead")) {
    if (ttMenu.hasClass("tt-open")) {
      ttMenu.removeClass("tt-open");
      ttMenu.css("display", "none");
    }
  }
});